services:
  web:
    build: ./frontend/
    volumes:
      - ./frontend/src:/app/frontend/src
      - ./frontend/public:/app/frontend/public
      - ./frontend/package.json:/app/frontend/package.json
      - ./frontend/package-lock.json:/app/frontend/package-lock.json
    stdin_open: true
    tty: true
    command: npm run dev
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env

  api:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
    command: npm run dev
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env
      
  db:
    image: postgres
    restart: unless-stopped
    env_file:
      - ./backend/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres-data: